service: itafinalprojektvaja9

provider:
  name: aws
  runtime: nodejs20.x
  stage: local
  region: us-east-1
  environment:
    JOBS_TABLE: ${self:service}-jobs-table-${self:provider.stage}
    JWT_SECRET: 'ita2024'

plugins:
  - serverless-offline
  - serverless-dynamodb-local
  - serverless-plugin-common-excludes
  - serverless-plugin-include-dependencies

custom:
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
    stages:
      - local
  serverless-offline:
    httpPort: 3060
    lambdaPort: 3070

functions:
  createJob:
    handler: handler.createJob
    events:
      - httpApi:
          path: /jobs
          method: post
  getJobs:
    handler: handler.getJobs
    events:
      - httpApi:
          path: /jobs
          method: get
  getJob:
    handler: handler.getJob
    events:
      - httpApi:
          path: /jobs/{id}
          method: get
  updateJob:
    handler: handler.updateJob
    events:
      - httpApi:
          path: /jobs/{id}
          method: put
  deleteJob:
    handler: handler.deleteJob
    events:
      - httpApi:
          path: /jobs/{id}
          method: delete
  cleanOldJobs:
    handler: handler.cleanOldJobs
    events:
      - schedule:
          rate: rate(1 day)
  processMessage:
    handler: handler.processMessage
    events:
      - sqs:
          arn: arn:aws:sqs:us-east-1:730335466539:MyQueue

resources:
  Resources:
    JobsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-jobs-table-${self:provider.stage}
        AttributeDefinitions:
          - AttributeName: jobId
            AttributeType: S
        KeySchema:
          - AttributeName: jobId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
